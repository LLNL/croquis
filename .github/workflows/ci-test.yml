name: CI Test

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        gcc-version: [8, 9, 10, 11]
        mpi-type: [openmpi, mpich]

    steps:
      - uses: actions/checkout@v2
      - name: Install boost
        run: |
          cd ..
          wget --no-verbose https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.tar.bz2
          tar -xjf boost_1_77_0.tar.bz2
      - name: Install OpenMPI
        if: ${{ matrix.mpi-type == 'openmpi' }}
        run: sudo apt-get install openmpi-bin libopenmpi-dev
      - name: Install mpich
        if: ${{ matrix.mpi-type == 'mpich' }}
        run: sudo apt-get install mpich
      - name: Install GCC-${{ matrix.gcc-version }}
        if: ${{ matrix.gcc-version == '8' || matrix.gcc-version == '11' }}
        run: sudo apt-get install gcc-${{ matrix.gcc-version }} g++-${{ matrix.gcc-version }}
      - name: Make
        run: |
          echo Run 'make'
          mpicc -show
          g++-${{ matrix.gcc-version }} --version
          mkdir build
          cd build
          cmake ../ -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE-CXX_COMPILER=g++-${{ matrix.gcc-version }} -DBOOST_ROOT=$PWD/../../boost_1_77_0
          make
      - name: Make test (mpich)
        if: ${{ matrix.mpi-type == 'mpich'}}
        run: |
          echo Run 'make test' with mpich, gcc-${{ matrix.gcc-version }}
          cd build
          ctest -VV -C ${{env.BUILD_TYPE}}
      - name : Make test (OpenMPI)
        if: ${{ matrix.mpi-type == 'openmpi' }}
        run: |
          echo Run 'make test' with OpenMPI, gcc-${{ matrix.gcc-version }}
          cd build
          export OMPI_MCA_rmaps_base_oversubscribe=1
          ctest -VV -C ${{env.BUILD_TYPE}}
